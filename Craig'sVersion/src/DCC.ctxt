#BlueJ class context
comment0.params=pIP\ pPort
comment0.target=DCC(java.lang.String,\ int)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ DCC\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Main\r\n
comment2.params=
comment2.target=void\ start()
comment2.text=\r\n\ Start\ Things\ Going\r\n
comment3.params=header
comment3.target=void\ InitSend(java.lang.String)
comment3.text=\r\n\ Ask\ the\ Server\ side\ if\ it\ is\ ready\ for\ a\ file\ by\ sending\r\n\ the\ first\ header\r\n
comment4.params=
comment4.target=void\ waitForAck()
comment4.text=\r\n\ Wait\ for\ the\ acknowlege\ from\ the\ server\r\n
comment5.params=serversIPAddress
comment5.target=void\ sendFile(java.lang.String)
comment5.text=\r\n\ Send\ File\ to\ the\ server\ in\ 1024\ byte\ packets\r\n
comment6.params=amount
comment6.target=void\ waitForAck(int)
comment6.text=\r\n\ Wait\ for\ the\ Server\ to\ acknowlege\ the\ client's\ latest\ \r\n\ data\ transfer\r\n
comment7.params=
comment7.target=java.lang.String\ createConnectionHeaderString()
comment7.text=\r\n\ Make\ first\ header\ String\ \r\n
comment8.params=
comment8.target=byte[]\ createConnectionHeaderByte()
comment8.text=\r\n\ Create\ the\ first\ header\ that\ we\ will\ use\ to\ establish\ a\r\n\ connection\r\n
comment9.params=fileName
comment9.target=void\ getFile(java.lang.String)
comment9.text=\r\n\ Get\ File\r\n
numComments=10
