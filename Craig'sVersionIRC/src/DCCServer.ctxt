#BlueJ class context
comment0.params=pIP\ pPort
comment0.target=DCCServer(java.lang.String,\ int)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ DCCServer\r\n
comment1.params=
comment1.target=void\ start()
comment1.text=\r\n\ Start\ Things\ going\r\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\r\n\ Main\r\n
comment2.params=str
comment2.target=void\ trafficDirector(java.lang.String)
comment2.text=\r\n\ Traffic\ Director\ -\ received\ something\ from\ the\ client,\r\n\ figure\ out\ what\ to\ do\ with\ it\ next\r\n
comment3.params=str
comment3.target=void\ breakHeader(java.lang.String)
comment3.text=\r\n\ Split\ the\ header\ doun\ into\ it's\ individual\ parts\r\n
comment4.params=
comment4.target=boolean\ checkAcceptance()
comment4.text=\r\n\ THe\ Client\ would\ like\ to\ send\ a\ file,\ ask\ the\ user\r\n\ if\ they\ are\ up\ for\ that\r\n
comment5.params=
comment5.target=void\ sendFirstAck()
comment5.text=\r\n\ Acknowlage\ the\ client's\ last\ transmittion\ \r\n
comment6.params=
comment6.target=void\ saveFile()
comment6.text=\r\n\ Take\ data\ packets\ coming\ in\ from\ the\ client\ and\ \r\n\ use\ them\ to\ make\ a\ byte\ array\ that\ can\ be\ used\ to\r\n\ create\ a\ file\ onece\ all\ data\ is\ received\r\n
comment7.params=
comment7.target=void\ run()
comment8.params=size
comment8.target=void\ sendAck(int)
comment8.text=\r\n\ Tell\ the\ client\ that\ the\ server\ received\ a\ packet\ of\ \r\n\ the\ size\ in\ argument\r\n
comment9.params=toSave
comment9.target=void\ writeFileToMem(byte[])
comment9.text=\r\n\ Create\ a\ file\ from\ the\ byte\ array\ full\ of\ data\r\n\ received\ from\ the\ client\r\n
numComments=11
